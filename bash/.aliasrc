

####################
##### SYSTEM #######
####################

#-------- Set Default Programs {{{
#------------------------------------------------------
# DESC: check and choose the first program in the array that is installed as the default

# find alternative apps if it is installed on your system
find_alt() { for i;do which "$i" >/dev/null && { echo "$i"; return 0;};done;return 1; }

# set the default program
# the first program in the array that is detected on your system will be chosen as the default
export OPENER=$(find_alt xdg-open exo-open gnome-open )
#export BROWSER=$(find_alt chromium-browser chromium qutebrowser google-chrome firefox $OPENER )
#export BROWSER=/usr/bin/chromium
# export BROWSER=/usr/bin/google-chrome-stable
export BROWSER=$(find_alt google-chrome-stable google-chrome-unstale chromium chromium-browser firefox $OPENER )
export BROWSERCLI=$(find_alt w3m links2 links lynx elinks $OPENER )
export BROWSERTOR=$(find_alt tor-browser-en)
export EBOOKER=$(find_alt ebook-viewer $OPENER )
export EDITOR=$(find_alt nvim vim vi nano $OPENER )
export EDITORCLI=$(find_alt nvim vim nano pico vi $OPENER )
export EDITORGUI=$(find_alt code subl mousepad leafpad gedit pluma $OPENER )
export FILEMANAGER=$(find_alt nemo nautilus thunar dolphin spacefm thunar enlightenment_filemanager $OPENER )
export FILEMANAGERCLI=$(find_alt ranger vifm mc $OPENER )
export PAGER=$(find_alt less more most)
export PLAYER=$(find_alt mpv mplayer ffplay cvlc $OPENER )
export READER=$(find_alt mupdf zathura evince $OPENER )
#export ROOTER=$(find_alt gksudo kdesudo )
export IMAGEVIEWER=$(find_alt sxiv feh ristretto display eog $OPENER )
export QUEUER=$(find_alt tsp fq ts )
#export TERMER=$(find_alt urxvt xterm uxterm termite sakura lxterminal terminator mate-terminal pantheon-terminal konsole gnome-terminal xfce4-terminal $OPENER )

# }}}

#-------- Configurations {{{
#------------------------------------------------------
cfg-aliasrc() { $EDITORCLI ~/.aliasrc ;}
cfg-bashrc() { $EDITORCLI ~/.bashrc ;}
cfg-cava() { $EDITORCLI ~/.config/cava/config ;}
cfg-picom() { $EDITORCLI ~/.config/picom.conf ;}
cfg-fstab() { sudo $EDITORCLI /etc/fstab ;}
cfg-group() { sudo $EDITORCLI /etc/group ;}
cfg-hintrc() { $EDITORCLI ~/.hintrc ;}
cfg-hosts() { sudo $EDITORCLI /etc/hosts ;}
cfg-i3wm() { $EDITORCLI ~/.i3/config ;}
cfg-inputrc() { $EDITORCLI ~/.inputrc ;}
cfg-livestreamer() { $EDITORCLI ~/.livestreamerrc ;}
cfg-megarc() { $EDITORCLI ~/.megarc ;}
cfg-mpd() { $EDITORCLI ~/.mpd/mpd.conf ;}
cfg-mpv() { $EDITORCLI ~/.config/mpv/mpv.conf ;}
cfg-mpv-input() { $EDITORCLI ~/.config/mpv/input.conf ;}
cfg-nanorc() { $EDITORCLI ~/.nanorc ;}
cfg-ncmpcpp() { $EDITORCLI ~/.ncmpcpp/config ;}
cfg-ncmpcpp-bindings() { $EDITORCLI ~/.ncmpcpp/bindings ;}
cfg-newsboat() { $EDITORCLI ~/.newsboat/config ;}
cfg-newsboat-queue() { $EDITORCLI ~/.newsboat/queue ;}
cfg-newsboat-urls() { $EDITORCLI ~/.newsboat/urls ;}
cfg-profile() { $EDITORCLI ~/.profile ;}
cfg-pulseaudio() { sudo $EDITORCLI /etc/pulse/default.pa ;}
cfg-quicktile() { $EDITORCLI ~/.config/quicktile.cfg ;}
cfg-ranger() { $EDITORCLI ~/.config/ranger/rc.conf ;}
cfg-ranger-rifle() { $EDITORCLI ~/.config/ranger/rifle.conf ;}
cfg-ranger-commands() { $EDITORCLI ~/.config/ranger/commands.py ;}
cfg-samba() { sudo $EDITORCLI /etc/samba/smb.conf ;}
cfg-ssh-client() { sudo $EDITORCLI /etc/ssh/ssh_config ;}
cfg-ssh-daemon() { sudo $EDITORCLI /etc/ssh/sshd_config ;}
cfg-sudoers() { sudo $EDITORCLI /etc/sudoers ;}
cfg-sakura() { $EDITORCLI ~/.config/sakura/sakura.conf ;}
cfg-surfraw() { $EDITORCLI ~/.config/surfraw/conf ;}
cfg-syncthing() { $EDITORCLI ~/.config/syncthing/config.xml ;}
cfg-tmuxrc() { $EDITORCLI ~/.config/tmux/tmux.conf.local ;}
cfg-tor() { sudo $EDITORCLI /etc/tor/torrc ;}
cfg-tor-user() { $EDITORCLI ~/.torrc ;}
cfg-torrentflix() { torrentflix --config=$EDITORCLI ;}
cfg-updatedb() { sudo $EDITORCLI /etc/updatedb.conf ;}
cfg-vifmrc() { $EDITORCLI ~/.config/vifm/vifmrc ;}
cfg-vimrc() { $EDITORCLI ~/.vimrc ;}
cfg-xbindkeysrc() { $EDITORCLI ~/.xbindkeysrc && killall xbindkeys ; xbindkeys ;}
cfg-xmodmap() { $EDITORCLI ~/.Xmodmap ;}
cfg-xresources() { $EDITORCLI ~/.Xresources ;}
cfg-zshrc() { $EDITORCLI ~/.zshrc ;}
cfg-zprezto() { $EDITORCLI ~/.zpreztorc ;}
cfg-zprofile() { $EDITORCLI ~/.zprofile ;}
#}}}

#-------- Configurations Reload {{{
#------------------------------------------------------
rld-bashrc() { source ~/.bashrc ;}
rld-font() { fc-cache -v -f ;}
rld-grub() { sudo grub-mkconfig -o /boot/grub/grub.cfg ;}
rld-greenclip() { killall greenclip ; nohup greenclip daemon > /dev/null 2>&1 & }
rld-updatedb() { sudo updatedb ;}
rld-xbindkeys() { killall xbindkeys ; xbindkeys ;}
rld-hyperkey() { xmodmap ~/.Xmodmap; killall xcape ; xcape -e 'Hyper_L=Return' ; killall xbindkeys ; xbindkeys ;}
rld-xcape() { killall xcape ; xcape -e 'Hyper_L=Return' ;}
rld-xdefaults() { xrdb ~/.Xdefaults ;}
rld-xmodmap() { xmodmap ~/.Xmodmap ;}
rld-keyblayout() { setxkbmap -layout latam -variant deadtilde ;} # reset back to US keyboard http://unix.stackexchange.com/a/151046
rld-xresources() { xrdb -load ~/.Xresources ;}
rld-zshrc() { source ~/.zshrc ;}
rld-zprezto() { source ~/.zpreztorc ;}
# }}}

#-------- Exports {{{
#------------------------------------------------------
# set display.
#export DISPLAY=:0

# set 256color support (doesnt work with older apps like abook)
#export TERM="screen-256color"
# export TERM="xterm-256color"

#}}}

#-------- Set Path {{{
#------------------------------------------------------
# http://askubuntu.com/questions/49784/how-is-bin-added-to-my-path
# Local installed package

# if [ -d "$HOME/.config/vifm/scripts" ] ; then
# 	PATH="$HOME/.config/vifm/scripts:$PATH"
# fi

# Go Packages (Golang)
#export GOPATH=~/.go
#export PATH="$PATH:$GOPATH/bin"

# NPM NodeJS Packages
if [ -d "$HOME/node_modules/bin" ] ; then
    export PATH="$HOME/node_modules/bin:$PATH"
fi

#NPM config
if [ -d "$HOME/.config/npm" ] ; then
    export PATH="$HOME/.config/npm:$PATH"
fi

# User Scripts
if [ -d "$HOME/.scripts" ] ; then
    export PATH="$HOME/.scripts:$PATH"
fi

# Alison Desktop
# if [ -d "$HOME/.local/bin/Alison_Desktop" ] ; then
#     export PATH="$HOME/.local/bin/Alison_Desktop:$PATH"
# fi

# .local/bin directory
if [ -d "$HOME/.local/bin" ] ; then
    export PATH="$HOME/.local/bin:$PATH"
fi


# User Scripts on local/bin user
if [ -d "$HOME/.local/bin/scripts" ] ; then
    export PATH="$HOME/.local/bin/scripts:$PATH"
fi

# tools directory inside local/bin
if [ -d "$HOME/.local/bin/scripts/tools" ] ; then
    export PATH="$HOME/.local/bin/scripts/tools:$PATH"
fi

# cron directory inside local/bin
if [ -d "$HOME/.local/bin/scripts/cron" ] ; then
    export PATH="$HOME/.local/bin/scripts/cron:$PATH"
fi

# i3cmds directory
if [ -d "$HOME/.local/bin/scripts/i3cmds" ] ; then
    export PATH="$HOME/.local/bin/scripts/i3cmds:$PATH"
fi

# rofi menues applets commands
if [ -d "$HOME/.config/rofi/bin" ] ; then
    export PATH="$HOME/.config/rofi/bin:$PATH"
fi

# cargo/bin executables
if [ -d "$HOME/.cargo/bin" ] ; then
    export PATH="$HOME/.cargo/bin:$PATH"
fi

# if [ -d "$HOME/.scripts/command" ] ; then
#     export PATH="$HOME/.scripts/command:$PATH"
# fi

# }}}

#-------- File and Directory Operations {{{
#------------------------------------------------------
# DESC: Aliases and functions for file and directory operations

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."

alias cp='cp -aiv'                    # cp prompt confirmation
alias mv='mv -iv'                     # mv interactive & verbose
alias mkdir='mkdir -p -v'             # create if not exist, verbose
alias rmdir='rmdir -v'                # rm empty directory only
alias ln='ln -iv'                     # create symlinks, interactive & verbose

# Create a new directory and enter it
mkdircd() { mkdir -p -v $1; cd $1 ;}

# Backup a file
cpbak() { cp $1{,.bak} ;}

# Show file permissions in octal format
file-permission() { stat --format '%a %n' "$@" ;}

# Display file type (MIME)
file-type() { file --mime-type -b "$@" ;}

# Remove files interactively
alias derez='rm -Iv'

# Move files (alias for mv)
alias uhaul='mv -iv --'

# Tree view of directories
alias lt='eza --icons --tree --level=2'

# }}}

#-------- Alias (Substitution) {{{
#------------------------------------------------------
# DESC: alias for mainly for existing commands

alias bc='bc -q -l'					# dont show opening msg, use math library
alias cal='cal -3 | grep --color -EC6 "\b$(date +%e | sed "s/ //g")"' # show calendar for 3 months
# alias cal='cal | grep --before-context 6 --after-context 6 --color -e " $(date +%e)" -e "^$(date +%e)"' # show calendar for 3 months
alias cal='cal -3m | grep -B6 -A6 --color -e " $(date +%e)" -e "^$(date +%e)"' # show calendar for 3 months
alias cp='cp -aiv'					# cp prompt confirmation
alias mv='mv -iv'         # mv interactive & verbose
alias df='df -hT --total'				# human readable, print filetype, and total
alias du='du -d1 -h'					# max depth, human readable
alias feh='feh --auto-zoom --scale-down -g 1360x768 -B white'
alias free='free -h'					# human readable
alias info='info --vi-keys'				# GNU info act like man command
alias ln='ln -iv'
alias lsblk='lsblk -o "KNAME,HOTPLUG,SIZE,FSTYPE,TYPE,LABEL,MOUNTPOINT,UUID,MODEL,SERIAL"'
alias mkdir='mkdir -p -v'				# create if not exist, verbose
alias mocp='padsp mocp'                                 # moc player working with pulseaudio
alias mount='mount | column -t'				# align in column
alias nano='nano -c -$'					# word wrapping
#alias periscope='periscope -l en'			# get english subtitles
alias pdfgrep='pdfgrep -in'				# ignorecase, page number
alias qcp='qcp -f do'                                   # renameutils bulk copy (destination column only)
alias qmv='qmv -f do'                                   # renameutils bulk rename (destination column only)
alias rmdir='rmdir -v'			                # rm empty directory only
#alias sr='sr -browser=$BROWSERCLI'			# open in cli browser
#alias surfraw='surfraw -browser=$BROWSER'		# open in gui browser
alias w3m='w3m -num'					# w3m web browser with line number
alias wget='wget -N -c --hsts-file ~/.config/wget/wget-hsts'					# continues/resumes
#alias youtube-viewer='youtube-viewer -C -f -4 --results=6'  # color, fullscreen, 480p, number of results
alias visudo='sudo EDITOR="$EDITOR" visudo'

alias derez='rm -Iv'			                # rm interactive, prompt once only
alias uhaul='mv -iv --'					# mv prompt confirmation

# }}}

#-------- ls replacement with eza (exa was deprecated) written in rust {{{
#------------------------------------------------------
#
#
alias ls='eza --icons --group-directories-first -x'
alias l='eza -x -a -s changed --icons --group-directories-first'
alias ll='eza -l --icons --group-directories-first'
alias la='eza -l -a -s changed --icons --group-directories-first'
alias lg='eza -l --icons --git -a'
#
# general use ######################

## alias ls='exa'                                                          # ls
## alias l='exa -lbF --git'                                                # list, size, type, git
## alias ll='exa -lbGF --git'                                             # long list
## alias llm='exa -lbGd --git --sort=modified'                            # long list, modified date sort
## alias la='exa -lbhHigUmuSa --time-style=long-iso --git --color-scale'  # all list
## alias lx='exa -lbhHigUmuSa@ --time-style=long-iso --git --color-scale' # all + extended list

# specialty views ##################

##alias lS='exa -1'                                                              # one column, just names

alias lt='eza --icons --tree --level=2'                                         # tree

# }}}

#-------- fzf {{{
#------------------------------------------------------

alias f='fzf --preview "bat --color \"always\" {}"'


### search packages with yay and fzf (* marks an installed package)
#alias yay-fzf="yay -Sl | awk '{print \$2(\$4==\"\" ? \"\" : \"  \")}' | fzf --multi --preview 'yay -Si {1}' | xargs -ro sudo yay -S"

# Better alternative using fzf to search packages with pacman/yay
#alias pacfzf="pacman -Slq | fzf --multi --preview 'pacman -Si {1}' --preview-window=:hidden --bind='ctrl-/:toggle-preview' | xargs -ro sudo pacman -S"
#alias yayfzf="yay -Slq | fzf --multi --preview 'yay -Si {1}; echo; pacman -Qi {1} 2>/dev/null || echo Package not installed' --preview-window=:hidden --bind='ctrl-/:toggle-preview' | xargs -ro yay -S"
alias yayfzf="yay -Sl | awk '{print \$2(\$4==\"\" ? \"\" : \"  \")}' | fzf --multi --preview 'yay -Si {1}' | xargs -ro yay -S"

### ytfzf alias for rofi
#alias yt="~/.local/bin/yt-r"

# color for common commands
# tutorial video: http://www.youtube.com/watch?v=RbVCzxnKJL4
#if [ -x /usr/bin/dircolors ]; then
#    eval "`dircolors -b`"
#    alias ls='ls --color=auto'
#    alias dir='dir --color=auto'
#    alias vdir='vdir --color=auto'
#    alias grep='grep --color=auto'
#    alias fgrep='fgrep --color=auto'
#    alias egrep='egrep --color=auto'
#fi

alias cat="bat"

## }}}


#-------- Alias (Good List) {{{
#------------------------------------------------------
# DESC: custom alias

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."

alias neocrux='neofetch --ascii --ascii_distro crux_small'
alias neowin='neofetch --ascii --ascii_distro windows'
alias disks='echo "╓───── m o u n t . p o i n t s"; echo "╙────────────────────────────────────── ─ ─ "; lsblk -a; echo ""; echo "╓───── d i s k . u s a g e"; echo "╙────────────────────────────────────── ─ ─ "; df -h;'

# Alison_Desktop aliases to start/stop service
# alias runalison='~/.local/bin/alison.sh'
# alias killalison='~/.local/bin/salison.sh'

alias fzfb='fzf --preview "bat --color \"always\" {}"'

#alias weatherm='curl wttr.in/mendoza'
#alias weather='curl http://wttr.in/$LOCATION'

#alias t="todo.sh"                                       # todotxt.sh program
#alias trash='trash-put -v'
# alias vless="/usr/share/vim/vim74/macros/less.sh"       # vim as a pager
#alias vradio="vim ~/.pyradio.csv && killall mpg123"     # vim as radio player using pyradio.csv
#alias wttr='curl wttr.in'                               # wego weather forcast using only curl
#alias wttr-help='curl wttr.in/:help'

# wttr() { curl -H "Accept-Language: ${LANG%_*}" wttr.in/"${1:-Orange}" ;}


## }}}


#-------- Clipboard and Upload {{{
#------------------------------------------------------
# DEMO: http://www.youtube.com/watch?v=fKP0FLp3uW0 (xclip)
# 	https://www.youtube.com/watch?v=Ww7Sl4d8F8A (pastebinit)
# DESC: copy/paste for linux machines (Mac style)

alias pbcopy='xclip -selection clipboard'	# copy to clipboard, ctrl+c, ctrl+shift+c
alias pbpaste='xclip -selection clipboard -o'	# paste from clipboard, ctrl+v, ctrl+shitt+v
alias pbselect='xclip -selection primary -o'	# paste from highlight, middle click, shift+insert
alias pbnoformatting='xclip -selection clipboard -o | xclip -selection clipboard'


# dump text from clipboard to pastebin server and copy link
alias pbclipboard2slexy='pbpaste | pastebinit -b "slexy.org" | pbcopy && echo "URL has been copied to clipboard" && pbpaste'
alias pbclipboard2sprungeus="pbpaste | curl -F 'sprunge=<-' http://sprunge.us | pbcopy && echo 'URL has been copied to clipboard' && pbpaste"
alias pbclipboard2ixio="pbpaste | curl -F 'f:1=<-' ix.io | pbcopy && echo 'URL has been copied to clipboard' && pbpaste"
alias pbclipboard2pastebindotcom='pbpaste | pastebinit -b "pastebin.com" | pbcopy && echo "URL has been copied to clipboard" && pbpaste'

alias pbuploadslexy='pbpaste | pastebinit -b "slexy.org" | pbcopy && echo "URL has been copied to clipboard" && pbpaste'
alias pbuploadsprungeus="cat "$@" | curl -F 'sprunge=<-' http://sprunge.us | pbcopy && echo 'URL has been copied to clipboard' && pbpaste"
alias pbuploadixio="cat "$1" | curl -F 'f:1=<-' ix.io | pbcopy && echo 'URL has been copied to clipboard' && pbpaste"

# }}}


#-------- Network and Internet {{{
#------------------------------------------------------
# DESC: Network and internet-related aliases and functions

# Check if a website is down
down4me() { curl -s "http://downforeveryoneorjustme.com/$1" | sed '/just you/!d;s/<[^>]*>//g' ;}

# Weather information
alias weather='curl wttr.in/$LOCATION'
alias wttr='curl wttr.in'
alias wttr-help='curl wttr.in/:help'

# Network tools
alias myip='curl http://ipecho.net/plain; echo'
alias ping='ping -c 5'
alias speedtest='speedtest-cli'
alias ports='netstat -tulanp'

# Web browsers
alias browser="$BROWSER"
alias privatebrowser="$BROWSER --incognito"

# Download managers
alias wget='wget -c'
alias curl='curl -O -L'

# SSH
alias sshconfig='$EDITOR ~/.ssh/config'
alias sshkey='ssh-keygen -t rsa -b 4096 -C "$(whoami)@$(hostname)-$(date -I)"'

# YouTube-related
alias yt='youtube-dl --add-metadata -i'
alias yta='yt -x -f bestaudio/best'
#youtube-dl-stream() { youtube-dl -o - "$1" | $PLAYER - ;}

# }}}


#-------- Functions (Oneliner) {{{
#------------------------------------------------------
#

# Locate files and open them in nvim
fzfedit() { locate $1 | fzf | xargs -n 1 nvim ;}

# Create a backup copy of a file
cpbak() { cp $1{,.bak} ;}

# Check if a website is down
down4me() { curl -s "http://downforeveryoneorjustme.com/$1" | sed '/just you/!d;s/<[^>]*>//g' ;}

# Kill all zombie processes
killall-zombies() { kill -HUP $(ps -A -ostat,ppid | grep -e '[zZ]'| awk '{ print $2 }') ;}

# Create a directory and change into it
mkdircd() { mkdir -p -v $1; cd $1 ;}

# Run a command in the background without output
nohup-command() { nohup "$@" >/dev/null 2>&1& }

# Open a file with the default GUI program
open() { xdg-open "$@" > /dev/null 2>&1 ;}

# View markdown files as man pages
mdless(){ pandoc -s -f markdown -t man "$*" | groff -T utf8 -man | less ;}

# Quickly navigate up multiple directory levels
up() { local x='';for i in $(seq ${1:-1});do x="$x../"; done;cd $x; }

# Show file access permissions in octal format
file-permission() { stat --format '%a %n' "$@" ;}

# Display MIME type of a file
file-type() { file --mime-type -b "$@" ;}

# Open Vim help from shell prompt
function :h { vim +":h $1" +'wincmd o' +'nnoremap q :q!<CR>' ;}

# Display a random command from commandlinefu.com
cmdfu-random() { echo -e "`curl -sL https://www.commandlinefu.com/commands/random/json|sed -re 's/.*,"command":"(.*)","summary":"([^"]+).*/\\x1b[1;32m\2\\n\\n\\x1b[1;33m\1\\x1b[0m/g'`\n" ;}

# Convert WebM videos to MP4 format
webm2mp4() {for i in *.webm; do ffmpeg -i "$i" -vf "crop=trunc(iw/2)*2:trunc(ih/2)*2" -c:v libx264 -preset slow -crf 22 -c:a copy "${i%.*}.mp4"; done ;}

# Search for files in specific directories, select with fzf, and open in Code
se() { du -a ~/bin/* ~/.scripts/* ~/.scripts/tools/* ~/.config/i3/myblocks/* ~/.config/i3/blocks/* | awk '{print $2}' | fzf | xargs -r code ;}

# }}}



#-------- Cameras Surveillance Work {{{
#------------------------------------------------------
#

alias showme_cam01hd="mpv rtsp://admin:admin1234admin@192.168.2.21:554/Channels/101 --no-resume-playback &"
alias showme_cam01sd="mpv rtsp://admin:admin1234admin@192.168.2.21:554/Channels/102 --no-resume-playback &"
#alias showme_cam02="mpv rtsp://admin:camaritas2018@192.168.1.164:554/Channels/101 --no-resume-playback &"

alias colegio_cam01='nohup mpv --geometry=49%+2+24 --video-aspect-override=16:9 "rtsp://admin:888888@192.168.3.30:554/cam/realmonitor?channel=01&subtype=0" </dev/null >/dev/null 2>&1 &'
alias colegio_cam02='nohup mpv --geometry=49%+2+504 --video-aspect-override=16:9 "rtsp://admin:888888@192.168.3.30:554/cam/realmonitor?channel=02&subtype=0" </dev/null >/dev/null 2>&1 &'
alias colegio_cam06='nohup mpv --geometry=49%+883+24 --video-aspect-override=16:9 "rtsp://admin:888888@192.168.3.30:554/cam/realmonitor?channel=06&subtype=0" </dev/null >/dev/null 2>&1 &'
alias colegio_cam10='nohup mpv --geometry=50%x50% --video-aspect-override=16:9 "rtsp://admin:888888@192.168.3.30:554/cam/realmonitor?channel=10&subtype=0" </dev/null >/dev/null 2>&1 &'
alias colegio_cam12='nohup mpv --geometry=48%+883+504 --video-aspect-override=16:9 "rtsp://admin:888888@192.168.3.30:554/cam/realmonitor?channel=12&subtype=0" </dev/null >/dev/null 2>&1 &'
colegio_cams() {
    colegio_cam01
    colegio_cam02
    colegio_cam06
    colegio_cam12
}


# }}}



#-------- smart lights {{{
#------------------------------------------------------
#

# LIFX Lights
alias lifx-night="lifx -B 51 -K 1"
alias lifx-day="lifx -B 60 -K 40"
alias lifx-on="lifx -1"
alias lifx-off="lifx -0"

# Hue Lights
alias hue-desk-on="lampe -s 8 y"
alias hue-desk-off="lampe -s 8 n"

# }}}


#-------- Dot File Management {{{
#------------------------------------------------------
#

alias dotfiles='/usr/bin/git --git-dir=$HOME/.dotfiles.git/ --work-tree=$HOME'
#alias dotpush= '/usr/bin/git --git-dir=$HOME/.deskdots/ --work-tree=$HOME push origin master'

# }}}


#-------- Crypto Prices {{{
#------------------------------------------------------
#

alias btcprice='curl -s https://rate.sx/BTC'
alias ethprice='curl -s https://rate.sx/ETH'
alias zrxprice='curl -s https://rate.sx/ZRX'

# }}}


# -------- Telebit Aliases {{{
#------------------------------------------------------
#

#alias telebit-pi4colegio="ssh -o ProxyCommand='openssl s_client -connect %h:443 -servername %h -quiet' raspi@chatty-skunk-9.telebit.io"

# }}}


#-------- Random {{{
#------------------------------------------------------
#

alias long-time-no-update="sudo pacman -Sy archlinux-keyring --needed && sudo pacman -Su"

#alias wall-skull='feh --bg-fill ~/Pictures/just-another-skull.jpg'


### find  -name '*fanart.jpg' -exec mogrify -resize 1920x1080\> {} \;

# easy-mount() {
#  if [ $# -lt 2 ]; then
#    echo -e "Easy mount to /mnt/tmp"
#    echo -e "\nUsage:   $0 //IP-Address/Share local_credentials_location"
#    echo -e "\nExample: easy-mount //192.168.1.1/directory /etc/smbcred"
#    return 1
#  fi
#  sudo mount.cifs $1 /mnt/tmp -o credentidals=$2,rw 0 0
#

#turn off mic button light
alias miclightoff='echo 0 | sudo tee /sys/class/leds/platform\:\:micmute/brightness'

#use nmap to display open ports 
alias openports='sudo netstat -tupln'

#fuck off package
alias yeet='yay -Rns'

#to be used with file creation (command > filename-`daty`)
alias daty='date +%Y%m%d'

# use 0x0.st to share file or command output
0x0() { curl -F"file=@$1" https://0x0.st | tee -a "$HOME/d/0x0.log"; }


# }}}
